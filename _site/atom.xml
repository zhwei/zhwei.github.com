<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[python -c "import this"]]></title>
  <link href="/atom.xml" rel="self"/>
  <link href="/"/>
  <updated>2013-05-19T23:22:17+08:00</updated>
  <id>/</id>
  <author>
    <name><![CDATA[zhwei]]></name>
    <email><![CDATA[sdutzhangwei@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[寒假记录]]></title>
    <link href="/2013/01/30/han-jia-ji-lu.html"/>
    <updated>2013-01-30T16:25:00+08:00</updated>
    <id>/2013/01/30/han-jia-ji-lu</id>
    <content type="html"><![CDATA[<h2 id='id12'>学习使用<code>socket</code>模块</h2>

<h3 id='20130130'>2013-01-30</h3>

<p>创建<code>tcp</code>服务器 客户端时,遇到如下错误,由于不能上网,无法查询特此记录<br /> Traceback (most recent call last): File &#8220;tsTserv.py&#8221;, line 21, in <pre class='markdown-html-error' style='border: solid 3px red; background-color: pink'>REXML could not parse this XML/HTML: 
&lt;module&gt;
		data = tcpSerSock.recv(BUFSIZ)
	File &quot;/usr/lib/python2.7/socket.py&quot;, line 170, in _dummy
		raise error(EBADF, &apos;Bad file descriptor&apos;)
	socket.error: [Errno 9] Bad file descriptor</pre></p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[thankpad E420 ubuntu 双显卡配置]]></title>
    <link href="/ubuntu/2012/12/13/thankpad-e420-double-graphics-configuration.html"/>
    <updated>2012-12-13T15:19:00+08:00</updated>
    <id>/ubuntu/2012/12/13/thankpad-e420-double-graphics-configuration</id>
    <content type="html"><![CDATA[<h3 id='id6'>首先卸载曾经的显卡驱动</h3>

<pre><code>sudo apt-get remove --purge fglrx  fglrx-amdcccle  fglrx-dev  </code></pre>

<h3 id='id7'>安装闭源前准备的库</h3>

<pre><code>sudo apt-get install build-essential cdbs fakeroot dh-make debhelper debconf libstdc++6 dkms libqtgui4 wget execstack libelfg0 dh-modaliases linux-headers-generic  </code></pre>

<h3 id='64ubuntu32'>如果是64位ubuntu,安装32位库:</h3>

<pre><code>sudo apt-get install ia32-libs  </code></pre>

<h3 id='id8'>然后下载最新催化剂驱动</h3>

<pre><code>wget http://www2.ati.com/drivers/linux/amd-driver-installer-catalyst-12.10-x86.x86_64.zip  
unzip amd-driver-installer-catalyst-12.10-x86.x86_64.zip  
chmod +x amd-driver-installer-catalyst-12.10-x86.x86_64.run   </code></pre>

<h3 id='id9'>创建<code>deb</code>安装包并安装</h3>

<pre><code>sudo sh ./amd-driver-installer-catalyst-12.10-x86.x86_64.run --buildpkg Ubuntu/precise  
sudo dpkg -i fglrx*.deb    </code></pre>

<h3 id='id10'>生成配置文件：</h3>

<pre><code>sudo aticonfig --initial -f  </code></pre>

<h3 id='id11'>防止配置未生效：</h3>

<pre><code>sudo aticonfig --input=/etc/X11/xorg.conf --tls=1  </code></pre>

<p>重启检查是否成功 fglrxinfo</p>

<p>以上来自<a href='http://wiki.cchtml.com/index.php/Ubuntu_Precise_Installation_Guide#Installing_Catalyst_Manually_.28from_AMD.2FATI.27s_site.29'>Ubuntu Precise Installation Guide</a></p>

<p>实测后报错<br /> X Error of failed request: BadRequest (invalid request code or no such operation)</p>

<p>有重新执行了一遍,删除了<code>xorg.comf</code> 文件 sudo apt-get install &#8211;reinstall libgl1-mesa-glx:i386 libgl1-mesa-dri:i386 xserver-xorg-core <br /> sudo dpkg-reconfigure xserver-xorg</p>

<p>重启后成功了.</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[11月月度总结]]></title>
    <link href="/杂记/2012/12/03/mouth-summary.html"/>
    <updated>2012-12-03T22:29:00+08:00</updated>
    <id>/杂记/2012/12/03/mouth-summary</id>
    <content type="html"><![CDATA[<h3 id='id4'>总结</h3>

<p>刚刚看了<a href='http://www.cnblogs.com/fuyunbiyi'>浮云比翼</a>同学的博客,感觉每月总结一些还是很必要的,每次想写博客的时候总是怕麻烦,然后就不了了之了,想这样给自己一个强制性的要求,每个月多多少少写一些,等回过头来看时,不会是一片空白.<br /> 最近这个月真的干了不少事,因为有项目压在手里的缘故吧,一直很忙,现在在做一个汽配商城的网站,后台功能已经差不多了,下周左右就可以着手写前台了,不过对前端真的不怎么感冒,现在是打算找一个类似的站点直接copy吧,罪过罪过&#8230;<br /> 很多学长都说过做项目时学到的东西最多也最快,现在真的体会到了,后台使用python写的,django框架,以前也看过好久文档和django book 当写起来时还是发现没什么思路,行胜于言,要铭记于心,不能光靠嘴上说的,一定要即使练习,快速记忆.</p>

<h3 id='djang'>djang使用</h3>

<p>之前用过web.py,算是一个小型框架吧,虽然现在越来越大,相对djangoi之类还是算小型.这算我第一次使用框架吧,真的感觉到了框架的便利之处,这个在webpy中感受不怎么明显,django的用户多,第三方的组建也很多,最近用了几个:<br /> + djang-mptt 让django在数据库中存储层级结构<br /> + djang-south 检测对model的修改病痛不到数据库<br /> + django-filebrowser 基于grappelli的文件管理器</p>

<h3 id='id5'>各种向往中</h3>

<p>+ js<br /> + ajax<br /> + jQuery<br /> &#8230;<br /> 各种不了解&#8230;</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu12.10 配置记录]]></title>
    <link href="/ubuntu/2012/11/23/ubuntu12-10-config-note.html"/>
    <updated>2012-11-23T22:38:00+08:00</updated>
    <id>/ubuntu/2012/11/23/ubuntu12-10-config-note</id>
    <content type="html"><![CDATA[<p>很久没更新的ubuntu12.04更新了下，结果直接挂掉了。。。 前几天装上了新出的12.10，gnome还是老样子，效果有一丢丢改进. 为了以后安装方便，很多环境的配置方法记录下。</p>

<p>为了使用pyCharm，要用sun jdk，openjdk明显不给力。。。</p>

<p>sunjdk文件可以在<a href='http://www.oracle.com/technetwork/java/javase/downloads/jdk7u9-downloads-1859576.html'>oracle</a>，已经保存到百度网盘。</p>

<pre><code>chmod +x jdk-6u32-linux-x64.bin

sudo ./jdk-6u32-linux-x64.bin

sudo mv jdk1.6.0_32 /usr/lib/jvm/

#配置环境变量，这是更改后的

PATH=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/local/jvm/jdk1.6.0_34/bin&quot; 
     
CLASSPATH=&quot;/usr/lib/jvm/jdk1.6.0_34/lib&quot;
 
JAVA_HOME=&quot;/usr/lib/jvm/jdk1.6.0_34&quot;</code></pre>

<p><a href='http://ruby-china.org/wiki/install_ruby_guide'>ruby on rails</a></p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[读《pro git》]]></title>
    <link href="/git/2012/11/13/read-pro-git.html"/>
    <updated>2012-11-13T14:02:00+08:00</updated>
    <id>/git/2012/11/13/read-pro-git</id>
    <content type="html"><![CDATA[<p>用的越多越感觉到git的强大之处，昨天看了下《pro git》，以前也曾经读过蒋鑫先生的《git权威指南》，感觉两者还是有很多不同之处的，相对来说，pro git更倾向于实用，而权威指南则是更倾向与易读。现在读到了 <em>在线部署服务器</em>章节。</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sae进行时]]></title>
    <link href="/sae/2012/11/11/saejin-xing-shi.html"/>
    <updated>2012-11-11T14:17:00+08:00</updated>
    <id>/sae/2012/11/11/saejin-xing-shi</id>
    <content type="html"><![CDATA[<h3 id='id3'>第一天</h3>
<hr />
<p>今天试了下新浪sae，<a href='http://appstack.sinaapp.com/static/doc/release/testing/index.html'>在线文档</a>,安装本地测试server是遇到gcc缺少Python.h, 在线找了下，运行： sudo apt-get install python-dev</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[my nook color]]></title>
    <link href="/nook/2012/11/10/my-nook-color.html"/>
    <updated>2012-11-10T16:06:00+08:00</updated>
    <id>/nook/2012/11/10/my-nook-color</id>
    <content type="html"><![CDATA[<h2 id='id1'>入手</h2>
<hr />
<p>前几天入手的nook color，新刷的cm7系统，主要是为了看书购入的，感觉还不错，ips屏还是比较给力的。<br /><img alt='正面' src='http://pic.yupoo.com/waqei_v/Cpdaqzbo/14tRpy.jpg' /></p>

<p>还有一个号称二十美刀的原装皮套，不过感觉好沉。。。<br /><img alt='皮套' src='http://pic.yupoo.com/waqei_v/CpdapX9W/pV950.jpg' /><br /><img alt='皮套2' src='http://pic.yupoo.com/waqei_v/CpdaqExr/N4JFS.jpg' /></p>

<h2 id='id2'>使用</h2>
<hr />
<p>cm7默认将内置存储挂载到emmc，但是软件安装是要求必须有内存卡，在购进一个card太麻烦了，看了一下cm7的fstab<br />位置：/system/etc/vold.fstab</p>

<pre><code>dev_mount sdcard /mnt/sdcard auto /devices/platform/mmci-omap-hs.1/mmc_host/mmc1

#改成

dev_mount sdcard /mnt/sdcard 8 /devices/platform/mmci-omap-hs.1/mmc_host/mmc0</code></pre>

<p>pdf mobi epub 阅读用的是静读天下专业版<br />html用 iReader</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[博客相关配置]]></title>
    <link href="/blog/2012/10/29/blog-config.html"/>
    <updated>2012-10-29T20:42:00+08:00</updated>
    <id>/blog/2012/10/29/blog-config</id>
    <content type="html"><![CDATA[<p>* 添加分类<br /><a href='http://paz.am/blog/blog/2012/06/25/octopress-category-list-plugin/'>paz.am</a> <br />* * * * 添加标签云<br /><a href='http://log4d.com/2012/05/tag-cloud/'>log4d</a><br />* * * * Liquid error: incompatible encoding regexp match (ASCII-8BIT regexp with UTF-8 string)解决方案 <br /><a href='http://pfmiles.github.com/blog/liquid-error-about-regexp-match-when-using-octopress-tagcloud/'>pfmiles</a></p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[闲时的思考]]></title>
    <link href="/杂记/2012/10/28/xian-shi-de-si-kao.html"/>
    <updated>2012-10-28T16:44:00+08:00</updated>
    <id>/杂记/2012/10/28/xian-shi-de-si-kao</id>
    <content type="html"><![CDATA[<p>看了越来越多的教程、文档，对函数和算法越来越熟悉，每天都在忙忙碌碌中度过，回过头发现生活也不是自己想象的那样充实，脑袋满了，心里却空荡荡了好多，现在发现学校强制要求我们的读书笔记是很重要的，不过总是随笔抄一些应付了事。从今天起，多读些书吧，不只是cook book、＊＊原理、＊＊大全，读些文学大家 的书，虽然不能立刻应用到编程中来，但却可以滋润下干涸的心灵。</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mysql 编码相关]]></title>
    <link href="/sql/2012/10/25/mysql-bian-ma-xiang-guan.html"/>
    <updated>2012-10-25T21:39:00+08:00</updated>
    <id>/sql/2012/10/25/mysql-bian-ma-xiang-guan</id>
    <content type="html"><![CDATA[<h3 id='_mycnf'>配置文件 my.cnf</h3>

<pre><code>默认字符集为 utf-8
default-character-set = utf-8
character-set-server= utf-8</code></pre>

<h3 id='mysql_'>mysql 命令</h3>

<pre><code>mysql设置编码命令 

SET character_set_client = utf8; 
SET character_set_connection = utf8; 
SET character_set_database = utf8; 
SET character_set_results = utf8;/*这里要注意很有用*/ 
SET character_set_server = utf8; 

SET collation_connection = utf8_bin; 
SET collation_database = utf8_bin; 
SET collation_server = utf8_bin; 


#查看数据库编码
show variables like &#39;characte%&#39;;

+--------------------------+----------------------------+
| Variable_name | Value |
+--------------------------+----------------------------+
| character_set_client | utf8 | 
| character_set_connection | utf8 | 
| character_set_database | utf8 | 
| character_set_filesystem | binary | 
| character_set_results | utf8 | 
| character_set_server | utf8 | 
| character_set_system | utf8 | 
| character_sets_dir | /usr/share/mysql/charsets/ | 
+--------------------------+----------------------------+

#创建数据库时指定编码

#GBK: 
create database test2 DEFAULT CHARACTER SET gbk COLLATE gbk_chinese_ci;
#UTF8: 
CREATE DATABASE `test2` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci

#数据库连接串中指定字符集
URL=jdbc:mysql://yourIP/college?user=root&amp;password=yourPassword&amp;useUnicode=true&amp;characterEncoding=gbk</code></pre>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[first blog]]></title>
    <link href="/杂记/2012/10/25/first-blog.html"/>
    <updated>2012-10-25T21:37:00+08:00</updated>
    <id>/杂记/2012/10/25/first-blog</id>
    <content type="html"><![CDATA[<ul>
<li>经过各种纠结，octopress博客终于建成了，如你所见.</li>
</ul>]]></content>
  </entry>
  
</feed>
