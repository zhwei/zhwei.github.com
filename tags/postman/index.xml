<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Postman on zhwei's Blog</title><link>https://zhw.in/tags/postman/</link><description>Recent content in Postman on zhwei's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 01 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://zhw.in/tags/postman/index.xml" rel="self" type="application/rss+xml"/><item><title>Postman 实现带 csrf_token 的表单登录</title><link>https://zhw.in/post/postman-login-with-csrftoken/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate><guid>https://zhw.in/post/postman-login-with-csrftoken/</guid><description>Postman 虽然自带了多种授权方式，但不同项目的登录方式千奇百怪，完全遵照 OAuth 等标准授权协议的项目简直是凤毛麟角。
下面使用 Postman 的 Pre-request Script 实现了 csrf_token 解析，然后与邮箱密码一起发起登录请求。
脚本中使用了多个环境变量，需要切换身份登陆时可以通过切换不同 Environment 实现。用到的环境变量如下：
Environments
APP_URL 应用的 base url，便于切换不同环境（local、staging 等），eg: https://app.test USER_EMAIL 登录使用的邮箱 USER_PASSWORD 登陆使用的密码 新建 Request，以下面是登录请求为例：
curl --location --request POST 'https://app.test/login' \ --form 'email=&amp;quot;user@example.com&amp;quot;' \ --form 'password=&amp;quot;123456&amp;quot;' \ --form '_csrf_token=&amp;quot;hmXaw7m2Mgyinr7yPHPgPbfVmtH4dOSwOUXykhC0&amp;quot;' 在 Pre-request Script 中发起 GET 请求解析 csrf token：
// 先清理 cookie (登陆状态) // 需要预先配置域名到 Whitelist Domains，否则无法使用 Script 清理 pm.cookies.jar().clear(pm.environment.get(&amp;#39;APP_URL&amp;#39;), (clearError) =&amp;gt; { if (clearError) { console.</description></item></channel></rss>